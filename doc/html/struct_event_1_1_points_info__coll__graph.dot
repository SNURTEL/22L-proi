digraph "Event::PointsInfo"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Event::PointsInfo\n||}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +points_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{unsigned int\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +ptsys_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{PointSystem\n||+ PointSystem()\l+ get_points()\l+ set_points()\l+ add_points()\l}",height=0.2,width=0.4,color="black",URL="$class_point_system.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -eventQueue_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{EventQueue\< Event \>\n||+ EventQueue()\l+ operator=()\l+ registerEvent()\l+ pop()\l+ isEmpty()\l+ size()\l+ clear()\l+ instance()\l- EventQueue()\l}",height=0.2,width=0.4,color="black",URL="$class_event_queue.html",tooltip=" "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #events_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{queue\< std::unique\l_ptr\< Event \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #self_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{unique_ptr\< EventQueue \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< Event \>" ,fontname="Helvetica"];
  Node7 [label="{EventQueue\< E \>\n||+ EventQueue()\l+ operator=()\l+ registerEvent()\l+ pop()\l+ isEmpty()\l+ size()\l+ clear()\l+ instance()\l- EventQueue()\l}",height=0.2,width=0.4,color="black",URL="$class_event_queue.html",tooltip="Singleton class wrapper for std::queue<E>."];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" #events_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{queue\< std::unique\l_ptr\< E \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node7 [color="grey25",fontsize="10",style="solid",label=" #self_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -points_" ,arrowhead="odiamond",fontname="Helvetica"];
}
