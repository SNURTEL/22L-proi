digraph "AbstractWindow"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{AbstractWindow\n|# WINDOW_HEIGHT\l# WINDOW_WIDTH\l# windowView\l# children\l|+ getWindow()\l+ render()\l+ AbstractWindow()\l+ AbstractWindow()\l+ ~AbstractWindow()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Contains main SFML functions."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{ActiveStateGraphic\n|# boardWindowView\l# frameWindowView\l# boardObjects\l# frameObjects\l# activeStateObjects\l|+ ActiveStateGraphic()\l+ render()\l+ getChildren()\l# conscructComposite()\l# setboardView()\l# setframeView()\l# setboardObjects()\l# setframeObjects()\l}",height=0.2,width=0.4,color="black",URL="$class_active_state_graphic.html",tooltip="Class resoponsible for computing ActiveState graphic."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{BareFrameGraphic\n|- color\l- frameSize\l|+ render()\l+ BareFrameGraphic()\l}",height=0.2,width=0.4,color="black",URL="$class_bare_frame_graphic.html",tooltip="Class responsible for bare frame render."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{BoardGraphic\n|# boardObjects\l# extraRenderQueue\l|+ render()\l+ getPointers()\l+ getChildren()\l+ initiateRenderQueue()\l+ BoardGraphic()\l# conscructComposite()\l}",height=0.2,width=0.4,color="black",URL="$class_board_graphic.html",tooltip="Class responsible for board updates and render."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{BulletsGraphic\n|# pathMap\l# textureMap\l# bullets\l# specialQueue\l# renderBullets\l|+ render()\l+ getRenderBullets()\l+ getBullets()\l+ BulletsGraphic()\l# makeRenderBullets()\l# loadTextures()\l# getAngle()\l# setBulletRotation()\l# makeRenderBullets()\l}",height=0.2,width=0.4,color="black",URL="$class_bullets_graphic.html",tooltip="Class responsible for bullets updates and render."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{EagleGraphic\n|# eaglePos\l# pathToTexture\l# eagleSet\l# specialQueue\l# eagleTexture\l|+ render()\l+ EagleGraphic()\l# setEaglePos()\l# loadTexture()\l}",height=0.2,width=0.4,color="black",URL="$class_eagle_graphic.html",tooltip="Class responsible for eagle rendering."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{FrameGraphic\n|- frameObjects\l- bareFrameSize\l- gameInfoPointers\l- infoWindowView\l|+ render()\l+ getPointers()\l+ FrameGraphic()\l- conscructComposite()\l- calculateBareFrameSize()\l- calculateInfoTextPoistion()\l- initiatesGameInfoPointers()\l- makeGamePointers()\l}",height=0.2,width=0.4,color="black",URL="$class_frame_graphic.html",tooltip="Class responsible for frame upadates and render."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{GameInfoGraphic\n|- gameInfo\l- font\l|+ render()\l+ GameInfoGraphic()\l- loadFont()\l- renderText()\l}",height=0.2,width=0.4,color="black",URL="$class_game_info_graphic.html",tooltip="Class responsible for writing game state info on the frame."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{MenuStateGraphic\n|# buttonPos\l# staticPointers\l# color\l# font\l# menuStateText\l# pauseStateText\l# menuStateHeader\l# pauseStateHeader\l# finishStateHeader\l# finishStateText\l|+ MenuStateGraphic()\l+ render()\l+ getStaticPointers()\l# loadFont()\l# renderText()\l# initiatePointsStateHeader()\l# renderHeader()\l# renderButtons()\l}",height=0.2,width=0.4,color="black",URL="$class_menu_state_graphic.html",tooltip="Class responsible for rendering static states graphic."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{StaticGraphic\n|# staticPointers\l# gameState\l# buttonsPosition\l# finishedStateView\l# menuStatesView\l|+ StaticGraphic()\l+ constructComposite()\l+ render()\l+ getChildren()\l# setMenuView()\l# calculateButtonsPos()\l}",height=0.2,width=0.4,color="black",URL="$class_static_graphic.html",tooltip="Class responsible for static graphic settings."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{TanksGraphic\n|# tanks\l# textureMap\l# pathMap\l# specialQueue\l# renderTanks\l|+ render()\l+ getTanks()\l+ getRenderTanks()\l+ TanksGraphic()\l# setTankRotation()\l# makeRenderTanks()\l# loadTextures()\l# getAngle()\l}",height=0.2,width=0.4,color="black",URL="$class_tanks_graphic.html",tooltip="Class responsible for tanks updates and render."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{TilesGraphic\n|# specialQueue\l# grid\l# pathMap\l# textureMap\l|+ render()\l+ getGrid()\l+ getRenderTiles()\l+ TilesGraphic()\l# loadTextures()\l# setTileTexture()\l}",height=0.2,width=0.4,color="black",URL="$class_tiles_graphic.html",tooltip="Class responsible for board updates and render."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{Window\n|# window\l# gameState\l# children_map\l# videoMode\l# activeStatePointers\l# staticStatesPointers\l|+ Window()\l+ selectgameState()\l+ initiateActiveStatePointers()\l+ initateStaticStatePointers()\l+ fetchMenuStatePointers()\l+ render()\l+ addEntity()\l+ removeEntity()\l+ loadLevel()\l+ loadStats()\l+ changeMenuPos()\l+ checkEntityType()\l+ gameWon()\l# conscructComposit()\l# instanceOf()\l}",height=0.2,width=0.4,color="black",URL="$class_window.html",tooltip="Contains main SFML functions."];
}
