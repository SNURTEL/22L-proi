digraph "Clock"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Clock\n||+ Clock()\l+ Clock()\l+ operator=()\l+ tick()\l+ sleep()\l+ initialize()\l+ instance()\l- Clock()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Represents an externally controlled clock running at a given frequency."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{SimplePublisher\n||+ ~SimplePublisher()\l+ notifySubscribers()\l+ attachSubscriber()\l+ detachSubscriber()\l+ operator==()\l+ operator!=()\l# SimplePublisher()\l}",height=0.2,width=0.4,color="black",URL="$class_simple_publisher.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #subscribers_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{vector\< SimpleSubscriber * \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -interval_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{nanoseconds\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -self_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{unique_ptr\< Clock \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -last_tick_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{time_point\< std::chrono\l::steady_clock \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
}
