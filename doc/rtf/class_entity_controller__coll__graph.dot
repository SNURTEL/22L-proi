digraph "EntityController"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{EntityController\n||+ EntityController()\l+ createTank()\l+ hitTank()\l+ killTank()\l+ removeEntity()\l+ moveAllEntities()\l+ moveEntity()\l+ setTankMoving()\l+ setTankDirection()\l+ findEntityAtPosition()\l+ getPlayer()\l+ addEntity()\l+ addEntity()\l+ addEntity()\l+ addEntity()\l+ checkEntityCollisions()\l+ getAllEntities()\l+ clear()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Aggregates and manipulates Entity objects."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #eventQueue_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{EventQueue\< Event \>\n||+ EventQueue()\l+ operator=()\l+ registerEvent()\l+ pop()\l+ isEmpty()\l+ size()\l+ clear()\l+ instance()\l- EventQueue()\l}",height=0.2,width=0.4,color="black",URL="$class_event_queue.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #events_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{queue\< std::unique\l_ptr\< Event \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #self_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{unique_ptr\< EventQueue \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node2 [dir="back",color="orange",fontsize="10",style="solid",label=" \< Event \>" ,fontname="Helvetica"];
  Node5 [label="{EventQueue\< E \>\n||+ EventQueue()\l+ operator=()\l+ registerEvent()\l+ pop()\l+ isEmpty()\l+ size()\l+ clear()\l+ instance()\l- EventQueue()\l}",height=0.2,width=0.4,color="black",URL="$class_event_queue.html",tooltip="Singleton class wrapper for std::queue<E>."];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #events_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{queue\< std::unique\l_ptr\< E \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #self_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #entities_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{vector\< std::unique\l_ptr\< Entity \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #player_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{PlayerTank\n||+ PlayerTank()\l+ PlayerTank()\l}",height=0.2,width=0.4,color="black",URL="$class_player_tank.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{Tank\n||+ setFacing()\l+ move()\l+ moveBack()\l+ deltaLives()\l+ getType()\l+ getLives()\l+ setMoving()\l+ isMoving()\l+ getPoints()\l+ setX()\l+ setY()\l+ offsetInCurrentDirection()\l+ createBullet()\l+ notify()\l# Tank()\l}",height=0.2,width=0.4,color="black",URL="$class_tank.html",tooltip="Base class for tank representation."];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{Entity\n||+ ~Entity()\l+ move()\l+ moveBack()\l+ getX()\l+ getY()\l+ getSpeed()\l+ getFacing()\l+ getSizeX()\l+ getSizeY()\l# Entity()\l# Entity()\l}",height=0.2,width=0.4,color="black",URL="$class_entity.html",tooltip=" "];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #y_\n#speed_\n#size_x_\n#x_\n#size_y_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{float\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #facing_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{Direction\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{SimpleSubscriber\n||+ ~SimpleSubscriber()\l+ subscribe()\l+ unsubscribe()\l+ removeDeletedSubject()\l+ notify()\l# SimpleSubscriber()\l}",height=0.2,width=0.4,color="black",URL="$class_simple_subscriber.html",tooltip=" "];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" #subscribedSubjects_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{vector\< SimplePublisher * \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node9 [color="grey25",fontsize="10",style="solid",label=" #bulletSpeed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node9 [color="grey25",fontsize="10",style="solid",label=" #type_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{TankType\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node9 [color="grey25",fontsize="10",style="solid",label=" #moving_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{bool\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node9 [color="grey25",fontsize="10",style="solid",label=" #points_\n#lives_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{unsigned int\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
}
